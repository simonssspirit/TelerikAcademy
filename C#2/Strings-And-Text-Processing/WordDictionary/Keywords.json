[
    {"Word":"abstract", "Description": "The abstract modifier can be used with classes, methods, properties, indexers, and events."},
    {"Word":"as", "Description": "The as operator is used to perform conversions between compatible types."},
    {"Word":"base", "Description": "The base keyword is used to access members of the base class from within a derived class"},
    {"Word":"bool", "Description": "The bool keyword is an alias of System.Boolean. It is used to declare variables to store the Boolean values, true and false."},
    {"Word":"break", "Description": "The break statement terminates the closest enclosing loop or switch statement in which it appears."},
    {"Word":"byte", "Description": "The byte keyword denotes an integral type that stores values as indicated in the following table."},
    {"Word":"case", "Description": "The switch statement is a control statement that handles multiple selections by passing control to one of the case statements within its body."},
    {"Word":"catch", "Description": "The try-catch statement consists of a try block followed by one or more catch clauses, which specify handlers for different exceptions."},
    {"Word":"char", "Description": "The char keyword is used to declare a Unicode character in the range indicated in the following table."},
    {"Word":"checked", "Description": "The checked keyword is used to control the overflow-checking context for integral-type arithmetic operations and conversions."},
    {"Word":"class", "Description": "Classes are declared using the keyword class."},
    {"Word":"const", "Description": "The const keyword is used to modify a declaration of a field or local variable."},
    {"Word":"continue", "Description": "The continue statement passes control to the next iteration of the enclosing iteration statement in which it appears."},
    {"Word":"decimal", "Description": "The decimal keyword denotes a 128-bit data type."},
    {"Word":"default", "Description": "The switch statement is a control statement that handles multiple selections by passing control to one of the case statements within its body."},
    {"Word":"delegate", "Description": "A delegate declaration defines a reference type that can be used to encapsulate a method with a specific signature."},
    {"Word":"do", "Description": "The do statement executes a statement or a block of statements repeatedly until a specified expression evaluates to false."},
    {"Word":"double", "Description": "The double keyword denotes a simple type that stores 64-bit floating-point values."},
    {"Word":"else", "Description": "The if-else statement selects a statement for execution based on the value of a Boolean expression."},
    {"Word":"enum", "Description": "The enum keyword is used to declare an enumeration, a distinct type consisting of a set of named constants called the enumerator list."},
    {"Word":"event", "Description": "Specifies an event."},
    {"Word":"explicit", "Description": "The explicit keyword is used to declare an explicit user-defined type conversion operator"},
    {"Word":"extern", "Description": "Us: the extern modifier in a method declaration to indicate that the method is implemented externally."},
    {"Word":"false", "Description": "In C#, the false keyword can be used as an overloaded operator or as a literal"},
    {"Word":"finally", "Description": "The finally block is useful for cleaning up any resources allocated in the try block."},
    {"Word":"fixed", "Description": "Prevents relocation of a variable by the garbage collector."},
    {"Word":"float", "Description": "The float keyword denotes a simple type that stores 32-bit floating-point values."},
    {"Word":"for", "Description": "The for loop executes a statement or a block of statements repeatedly until a specified expression evaluates to false."},
    {"Word":"foreach", "Description": "The foreach statement repeats a group of embedded statements for each element in an array or an object collection."},
    {"Word":"goto", "Description": "The goto statement transfers the program control directly to a labeled statement."},
    {"Word":"if", "Description": "The if statement selects a statement for execution based on the value of a Boolean expression."},
    {"Word":"implicit", "Description": "The implicit keyword is used to declare an implicit user-defined type conversion operator."},
    {"Word":"in", "Description": "The foreach,in statement repeats a group of embedded statements for each element in an array or an object collection."},
    {"Word":"int", "Description": "The int keyword denotes an integral type that stores values according to the size and range shown in the following table."},
    {"Word":"interface", "Description": "An interface defines a contract. A class or struct that implements an interface must adhere to its contract."},
    {"Word":"internal", "Description": "The internal keyword is an access modifier for types and type members."},
    {"Word":"is", "Description": "The is operator is used to check whether the run-time type of an object is compatible with a given type."},
    {"Word":"lock", "Description": "The lock keyword marks a statement block as a critical section by obtaining the mutual-exclusion lock for a given object, executing a statement, and then releasing the lock."},
    {"Word":"long", "Description": "The long keyword denotes an integral type that stores values according to the size and range shown in the following table."},
    {"Word":"namespace", "Description": "The namespace keyword is used to declare a scope. This namespace scope lets you organize code and gives you a way to create globally-unique types."},
    {"Word":"new", "Description": "In C#, the new keyword can be used as an operator or as a modifier."},
    {"Word":"null", "Description": "The null keyword is a literal that represents a null reference, one that does not refer to any object."},
    {"Word":"object", "Description": "The object type is an alias for System.Object in the .NET Framework."},
    {"Word":"operator", "Description": "The operator keyword is used to declare an operator in a class or struct declaration."},
    {"Word":"out", "Description": "The out method parameter keyword on a method parameter causes a method to refer to the same variable that was passed into the method"},
    {"Word":"override", "Description": "Use the override modifier to modify a method, a property, an indexer, or an event."},
    {"Word":"params", "Description": "The params keyword lets you specify a method parameter that takes an argument where the number of arguments is variable."},
    {"Word":"private", "Description": "The private keyword is a member access modifier."},
    {"Word":"protected", "Description": "The protected keyword is a member access modifier."},
    {"Word":"public", "Description": "The public keyword is an access modifier for types and type members."},
    {"Word":"readonly", "Description": "The readonly keyword is a modifier that you can use on fields."},
    {"Word":"ref", "Description": "The ref method parameter keyword on a method parameter causes a method to refer to the same variable that was passed into the method."},
    {"Word":"return", "Description": "The return statement terminates execution of the method in which it appears and returns control to the calling method."},
    {"Word":"sbyte", "Description": "The sbyte keyword denotes an integral type that stores values according to the size and range shown in the following table."},
    {"Word":"sealed", "Description": "A sealed class cannot be inherited."},
    {"Word":"short", "Description": "The short keyword denotes an integral data type that stores values according to the size and range shown in the following table."},
    {"Word":"sizeof", "Description": "The sizeof operator is used to obtain the size in bytes for a value type."},
    {"Word":"stackalloc", "Description": "Allocates a block of memory on the stack."},
    {"Word":"static", "Description": "Use the static modifier to declare a static member, which belongs to the type itself rather than to a specific object."},
    {"Word":"string", "Description": "The string type represents a string of Unicode characters."},
    {"Word":"struct", "Description": "A struct type is a value type that can contain constructors, constants, fields, methods, properties, indexers, operators, events, and nested types."},
    {"Word":"switch", "Description": "The switch statement is a control statement that handles multiple selections by passing control to one of the case statements within its body."},
    {"Word":"this", "Description": "The this keyword refers to the current instance of the class. Static member functions do not have a this pointer."},
    {"Word":"throw", "Description": "The throw statement is used to signal the occurrence of an anomalous situation (exception) during the program execution."},
    {"Word":"true", "Description": "In C#, the true keyword can be used as an overloaded operator or as a literal."},
    {"Word":"try", "Description": "The try-catch statement consists of a try block followed by one or more catch clauses, which specify handlers for different exceptions."},
    {"Word":"typeof", "Description": "The typeof operator is used to obtain the System.Type object for a type."},
    {"Word":"uint", "Description": "The uint keyword denotes an integral type that stores values according to the size and range shown in the following table."},
    {"Word":"ulong", "Description": "The ulong keyword denotes an integral type that stores values according to the size and range shown in the following table."},
    {"Word":"unchecked", "Description": "The unchecked keyword is used to control the overflow-checking context for integral-type arithmetic operations and conversions."},
    {"Word":"unsafe", "Description": "The unsafe keyword denotes an unsafe context, which is required for any operation involving pointers."},
    {"Word":"ushort", "Description": "The ushort keyword denotes an integral data type that stores values according to the size and range shown in the following table."},
    {"Word":"using", "Description": "The using keyword has two major uses."},
    {"Word":"virtual", "Description": "The virtual keyword is used to modify a method or property declaration, in which case the method or the property is called a virtual member."},
    {"Word":"volatile", "Description": "The volatile keyword indicates that a field can be modified in the program by something such as the operating system, the hardware, or a concurrently executing thread."},
    {"Word":"void", "Description": "When used as the return type for a method, void specifies that the method does not return a value."},
    {"Word":"while", "Description": "The while statement executes a statement or a block of statements until a specified expression evaluates to false."}
]